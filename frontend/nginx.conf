server {
    listen 28001;
    server_name _;

    root /var/www/sciqurio-frontend;
    index index.html;

    # 启用gzip
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_types
        application/atom+xml
        application/javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rss+xml
        application/vnd.geo+json
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/bmp
        image/svg+xml
        image/x-icon
        text/cache-manifest
        text/css
        text/plain
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy;

    location / {
        try_files $uri $uri/ /index.html;
        
        # 启用预压缩文件支持
        gzip_static on;
        
        # 如果安装了nginx-brotli模块，可以启用brotli预压缩支持
        # brotli_static on;
    }

    location /assets/ {
        root /var/www/sciqurio-frontend;
        
        # 更新为高效的缓存策略：长期缓存带哈希的资源，短期缓存不带哈希的
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, max-age=31536000, immutable";
            
            # 启用预压缩文件支持
            gzip_static on;
            
            # 如果安装了nginx-brotli模块，可以启用brotli预压缩支持
            # brotli_static on;
        }
        
        # 默认不缓存其他资源
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }

    # 确保不缓存 HTML 文件
    location ~ \.html$ {
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        expires -1;
    }
}

server {
    listen 28000;
    server_name omniarch.actsmart.cn;

    location / {
        # Replace with your actual backend service address if different
        proxy_pass http://localhost:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}